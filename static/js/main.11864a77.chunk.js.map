{"version":3,"sources":["assets/DefaultBeer.png","components/BeerComponent/BeerComponent.js","containers/BeerContainer/BeerContainer.js","App.js","reportWebVitals.js","index.js"],"names":["BeerComponent","props","useState","selectedId","setSelectedId","Col","xs","sm","md","lg","className","Card","onClick","beer","Img","src","image_url","defaultBeerImg","Body","Title","name","Footer","abv","id","Modal","show","onHide","undefined","dialogClassName","Header","type","tagline","description","food_pairing","map","food","BeerContainer","error","message","data","Container","Row","App","setData","setError","foodChoice","setFoodChoice","useEffect","axios","get","then","response","catch","Navbar","bg","expand","Brand","Toggle","Collapse","Nav","Link","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11864a77.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/DefaultBeer.b9b2d09e.png\";","import React, { useState } from \"react\";\nimport \"../../app.scss\";\nimport defaultBeerImg from \"../../assets/DefaultBeer.png\";\nimport { Card, Col, Modal } from \"react-bootstrap\";\n\nexport default function BeerComponent(props) {\n  const [selectedId, setSelectedId] = useState();\n  return (\n    <>\n      <Col\n        key={props.beer.id}\n        xs={12}\n        sm={6}\n        md={4}\n        lg={3}\n        className=\"cursor p-0\"\n      >\n        <Card onClick={() => setSelectedId(props.beer)} className=\"h-100\">\n          <Card.Img\n            src={props.beer.image_url ? props.beer.image_url : defaultBeerImg}\n            className=\"p-3\"\n          />\n          <Card.Body>\n            <Card.Title className=\"text-center\"> {props.beer.name}</Card.Title>\n          </Card.Body>\n          <Card.Footer className=\"text-muted text-center\">\n            {props.beer.abv}%\n          </Card.Footer>\n        </Card>\n      </Col>\n\n      <Modal\n        show={selectedId}\n        onHide={() => setSelectedId(undefined)}\n        dialogClassName=\"modal-10w\"\n        aria-labelledby=\"example-custom-modal-styling-title\"\n      >\n        {selectedId ? (\n          <>\n            <Modal.Header>\n              <Modal.Title id=\"example-custom-modal-styling-title\">\n                {selectedId.name}\n              </Modal.Title>\n              <button\n                type=\"button\"\n                className=\"btn-close\"\n                aria-label=\"Close\"\n                onClick={() => setSelectedId(undefined)}\n              ></button>\n            </Modal.Header>\n            <Modal.Body>\n              <p>\n                <strong>Tagline:</strong> {selectedId.tagline}\n              </p>\n              <p>\n                <strong>ABV:</strong> {selectedId.abv}%\n              </p>\n              <p>\n                <strong>Description:</strong> {selectedId.description}\n              </p>\n              <strong>Best foods to drink this with:</strong>\n              <ul>\n                {selectedId.food_pairing.map((food) => (\n                  <li key={food}>{food}</li>\n                ))}\n              </ul>\n            </Modal.Body>\n          </>\n        ) : (\n          <>\n            <Modal.Header>\n              <Modal.Title id=\"example-custom-modal-styling-title\">\n                No beer info found\n              </Modal.Title>\n              <button\n                type=\"button\"\n                className=\"btn-close\"\n                aria-label=\"Close\"\n                onClick={() => setSelectedId(undefined)}\n              ></button>\n            </Modal.Header>\n            <Modal.Body>\n              <p>\n                I'm sorry but we couldn't find any information about this beer\n              </p>\n            </Modal.Body>\n          </>\n        )}\n      </Modal>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"../../app.scss\";\nimport { Container, Row } from \"react-bootstrap\";\nimport BeerComponent from \"../../components/BeerComponent/BeerComponent\";\n\nexport default function BeerContainer(props) {\n  if (props.error) return `Error: ${props.error.message}`;\n  if (!props.data) return \"No beers!\";\n\n  return (\n    <main>\n      <Container className=\"p-3\">\n        <Row className=\"p-3\">\n          {props.data.map((beer) => (\n            <BeerComponent beer={beer} />\n          ))}\n        </Row>\n      </Container>\n    </main>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BeerContainer from \"./containers/BeerContainer/BeerContainer\";\nimport { Nav, Navbar, Container } from \"react-bootstrap\";\n\nfunction App() {\n  const [data, setData] = useState();\n  const [error, setError] = useState();\n  const [foodChoice, setFoodChoice] = useState(\"all\");\n\n  useEffect(() => {\n    axios\n      .get(`https://api.punkapi.com/v2/beers?food=${foodChoice}`)\n      .then((response) => {\n        setData(response.data);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n  }, [foodChoice]);\n\n  return (\n    <>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand>Beer food profiler</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link onClick={() => setFoodChoice(\"all\")}>All</Nav.Link>\n              <Nav.Link onClick={() => setFoodChoice(\"pizza\")}>Pizza</Nav.Link>\n              <Nav.Link onClick={() => setFoodChoice(\"steak\")}>Steak</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <BeerContainer data={data} error={error} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}